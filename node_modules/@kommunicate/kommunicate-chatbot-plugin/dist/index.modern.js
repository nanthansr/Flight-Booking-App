function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var Kommunicate = {};

function isValidObject(object) {
  return object && Object.keys(object).length && object.constructor === Object;
}

Kommunicate.init = function (appId, options) {
  var environment;
  var scriptSource = "https://widget.kommunicate.io/v2/kommunicate.app";

  if (!appId) {
    console.info('Please provide appId to initialize the widget');
    return;
  }

  if (typeof appId !== 'string') {
    console.info('AppId should be string');
    return;
  }
  var settings = {
    "appId": appId,
    "popupWidget": true,
    "automaticChatOpenOnNavigation": true
  };

  if (isValidObject(options)) {
    if (options && options.environment) {
      environment = options.environment;
      delete options.environment;
    }

    settings = _extends({}, settings, options);
  }

  switch (environment) {
    case "test":
      scriptSource = "https://widget-test.kommunicate.io/v2/kommunicate.app";
      break;

    case "local":
      scriptSource = "http://localhost:3030/v2/kommunicate.app";
      break;

    default:
      scriptSource = "https://widget.kommunicate.io/v2/kommunicate.app";
      break;
  }

  (function (d, m) {
    var kommunicateSettings = settings;
    var s = document.createElement("script");
    s.type = "text/javascript";
    s.async = true;
    s.src = scriptSource;
    var h = document.getElementsByTagName("head")[0];
    h.appendChild(s);
    window.kommunicate = m;
    m._globals = kommunicateSettings;
  })(document, window.kommunicate || {});
};

export default Kommunicate;
//# sourceMappingURL=index.modern.js.map
